# Vault external dependencies
vault:
  fullnameOverride: devzero-vault

  global:
    enabled: true

  injector:
    enabled: false
    metrics:
      enabled: true
  ui:
    enabled: true

  server:
    enabled: true
    ingress:
      enabled: false
    auditStorage:
      enabled: true
    dataStorage:
      enabled: true
    ha:
      enabled: true
      replicas: 3
      config: |
        disable_mlock = true
        ui = true
        
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        
        service_registration "kubernetes" {}

        storage "mysql" {
          ha_enabled = true
          address    = "devzero-mysql-vault-headless"
          username   = "vault"
          password   = "vault"
          database   = "vault"
        }

  ingress:
    # -- Specify if the Vault Ingress is enabled
    enabled: true
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-self-hosted"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # -- TLS
    tls:
      - secretName: devzero-vault-tls
        hosts:
          - "vault.{{ .Values.domain }}"
    # -- Hosts
    hosts:
      - host: "vault.{{ .Values.domain }}"
        paths:
          - path: /
            pathType: Prefix

# Minio external dependencies
minio:
  fullnameOverride: devzero-minio
  replicas: 5

  resources:
    requests:
      memory: 2Gi


grafana:
  fullnameOverride: devzero-grafana
  ingress:
    # -- Specify if the Grafana Ingress is enabled
    enabled: true
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-self-hosted"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # -- TLS
    tls:
      - secretName: devzero-grafana-tls
        hosts:
          - "grafana.{{ .Values.domain }}"
    # -- Hosts
    hosts:
      - host: "grafana.{{ .Values.domain }}"
        paths:
          - path: /
            pathType: Prefix

mimir:
  fullnameOverride: devzero-mimir
  ingress:
    # -- Specify if the Mimir Ingress is enabled
    enabled: true
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-self-hosted"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # -- TLS
    tls:
      - secretName: devzero-mimir-tls
        hosts:
          - "mimir.{{ .Values.domain }}"
    # -- Hosts
    hosts:
      - host: "mimir.{{ .Values.domain }}"
        paths:
          - path: /
            pathType: Prefix


mimir-distributed:
  fullnameOverride: devzero-mimir-distributed
  mimir:
    structuredConfig:
      limits:
        max_global_series_per_user: 10000000
        request_rate: 0
        request_burst_size: 0
        ingestion_rate: 1000000
        ingestion_burst_size: 100000000

      querier:
        max_concurrent: 512

      query_scheduler:
        max_outstanding_requests_per_tenant: 4096

  ingester:
    persistentVolume:
      size: "100Gi"

  compactor:
    persistentVolume:
      size: "100Gi"

  store_gateway:
    persistentVolume:
      size: "100Gi"

  alertmanager:
    enabled: false

  ruler:
    enabled: false

  overrides_exporter:
    enabled: false

  query_scheduler:
    enabled: false

  minio:
    enabled: true
