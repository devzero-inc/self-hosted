apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devzero.resourceName" (dict "ctx" . "component" "gateway") }}
  labels:
    {{- include "devzero.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
  annotations:
    {{- toYaml .Values.gateway.annotations | nindent 4 }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.gateway.replicas }}
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "devzero.selectorLabels" (dict "ctx" . "component" "gateway") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "devzero.podLabels" (dict "ctx" . "component" "gateway") | nindent 8 }}
      annotations:
        {{- include "devzero.podAnnotations" (dict "ctx" . "component" "gateway") | nindent 8 }}
    spec:
      {{- with .Values.gateway.schedulerName }}
      schedulerName: {{ . | quote }}
      {{- end }}
      {{- if .Values.gateway.priorityClassName }}
      priorityClassName: {{ .Values.gateway.priorityClassName }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "devzero.resourceName" (dict "ctx" . "component" "gateway") }}
          image: "{{ .Values.image.repository }}/{{ .Values.gateway.imageName}}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.gateway.service.port }}
              protocol: TCP
            - name: metrics-port
              containerPort: {{ .Values.gateway.service.metricsPort }}
              protocol: TCP
            - containerPort: 8081
              name: health
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: health
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: health
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{ toYaml .Values.gateway.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /root/config/self_hosted.yaml
              name: config
              subPath: self_hosted.yaml
          env:
            - name: ENVIRONMENT
              value: "self_hosted"
            - name: VAULTED_AUTH_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: public.key

      volumes:
        - name: config
          configMap:
            name: {{ include "devzero.resourceName" (dict "ctx" . "component" "gateway") }}
