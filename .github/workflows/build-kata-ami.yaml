name: Build Kata AMI
run-name: "Build Kata AMI for ${{ github.event.inputs.image_type || 'private' }} image"


on:
  workflow_dispatch:
    inputs:
      image_type:
        type: choice
        required: true
        description: 'The type of image to build. Use "private" for development and testing images and "public" for public images available to customers.'
        options:
          - private
          - public

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
#  build-kernel:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          show-progress: false
#
#      - name: Clone Linux repository
#        uses: actions/checkout@v4
#        with:
#          token: ${{ secrets.GH_TOKEN }}
#          repository: virt-pvm/linux
#          ref: e7fb41a749cb4ff541f0876629921f1f9b39a805
#          path: ./kata/linux-images/linux
#          fetch-depth: 1
#          show-progress: false
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Login to registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: devzero-inc
#          password: ${{ secrets.GH_TOKEN }}
#
#      - name: Build kernel docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: ./kata/linux-images
#          file: ./kata/linux-images/Dockerfile.host
#          tags: ghcr.io/devzero-inc/host-pvm-linux:latest
#          push: true
#
#      - name: Build guest docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: ./kata/linux-images
#          file: ./kata/linux-images/Dockerfile.guest
#          tags: ghcr.io/devzero-inc/guest-pvm-linux:latest
#          push: true

  build-ami:
    name: Build AMI with Packer
    runs-on: ubuntu-latest
#    needs: build-kernel
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Pull and Create Temporary Container
        run: |
          docker pull ghcr.io/devzero-inc/host-pvm-linux:latest
          docker pull ghcr.io/devzero-inc/guest-pvm-linux:latest

          CONTAINER_ID=$(docker create ghcr.io/devzero-inc/host-pvm-linux:latest)
          docker cp "$CONTAINER_ID:/kernel-6.7.0_dz_pvm_host-1.x86_64.rpm" ./kata/packer/kernel.rpm
          docker cp "$CONTAINER_ID:/kernel-headers-6.7.0_dz_pvm_host-1.x86_64.rpm" ./kata/packer/kernel-headers.rpm
          docker cp "$CONTAINER_ID:/kernel-devel-6.7.0_dz_pvm_host-1.x86_64.rpm" ./kata/packer/kernel-devel.rpm
          docker rm "$CONTAINER_ID"

          CONTAINER_ID_GUEST=$(docker create ghcr.io/devzero-inc/guest-pvm-linux:latest)
          docker cp "$CONTAINER_ID_GUEST:/guest-vmlinux" ./kata/packer/guest-vmlinux
          docker rm "$CONTAINER_ID_GUEST"

      - name: Configure AWS Credentials for Self Hosted
        if: github.event.inputs.image_type == 'private'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::484907513542:role/github-actions-oidc-role
          aws-region: us-west-1

      - name: Configure AWS Credentials for Public AMIs
        if: github.event.inputs.image_type == 'public'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::710271940431:role/github-actions-oidc-role
          aws-region: us-west-1

      - name: Initialize and Build AMI
        run: |
          cd ./kata/packer
          packer init .
          packer build --var-file=${{ github.event.inputs.image_type || 'private' }}.pkrvars.hcl .

  # build-host-container:
  #   name: Build Host Container
  #   runs-on: ubuntu-latest
  #   needs: setup-environment
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Navigate to Linux Images Directory and Clone Repository
  #       run: |
  #         cd ./kata/linux-images || { echo "Error: Directory kata/linux-images not found."; exit 1; }
  #         git clone https://github.com/virt-pvm/linux.git --depth=1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build Docker Image for Host
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./kata/linux-images/Dockerfile.host
  #         tags: linux-image-host:latest
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         load: true

  # build-guest-container:
  #   name: Build Guest Container
  #   runs-on: ubuntu-latest
  #   needs: setup-environment
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Navigate to Linux Images Directory and Clone Repository
  #       run: |
  #         cd ./kata/linux-images || { echo "Error: Directory kata/linux-images not found."; exit 1; }
  #         git clone https://github.com/virt-pvm/linux.git --depth=1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build Docker Image for Guest
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./kata/linux-images/Dockerfile.guest
  #         tags: linux-image-guest:latest
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         load: true

  # extract-files:
  #   name: Extract Kernel Files from Containers
  #   runs-on: ubuntu-latest
  #   needs: [build-host-container, build-guest-container]
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Create Temporary Container and Copy Files
  #       run: |
  #         CONTAINER_ID=$(docker create linux-image-host:latest)
  #         docker cp "$CONTAINER_ID:/kernel-6.7.0_dz_pvm_host-1.x86_64.rpm" self-hosted/kata/packer/kernel.rpm
  #         docker cp "$CONTAINER_ID:/kernel-headers-6.7.0_dz_pvm_host-1.x86_64.rpm" self-hosted/kata/packer/kernel-headers.rpm
  #         docker cp "$CONTAINER_ID:/kernel-devel-6.7.0_dz_pvm_host-1.x86_64.rpm" self-hosted/kata/packer/kernel-devel.rpm
  #         docker rm "$CONTAINER_ID"

  #         CONTAINER_ID_GUEST=$(docker create linux-image-guest:latest)
  #         docker cp "$CONTAINER_ID_GUEST:/guest-vmlinux" self-hosted/kata/packer/guest-vmlinux
  #         docker rm "$CONTAINER_ID_GUEST"

  # build-ami:
  #   name: Build AMI with Packer
  #   runs-on: ubuntu-latest
  #   needs: extract-files
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Initialize and Build AMI
  #       run: |
  #         cd ./kata/packer
  #         packer init .
  #         packer build .

