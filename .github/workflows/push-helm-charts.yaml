name: '[Helm] Push Charts to Docker Hub'

on:
  workflow_dispatch:
    inputs:
      version-change:
        description: 'Version change type for Helm charts'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write

jobs:
  package-and-push:
    name: Package & Push Helm Charts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: [dz-control-plane, dz-control-plane-deps, dz-data-plane, dz-data-plane-deps]
      fail-fast: false

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Current Chart Version
        id: get_version
        run: |
          VERSION_FILE="charts/${{ matrix.chart }}/Chart.yaml"
          CURRENT_VERSION=$(grep 'version:' $VERSION_FILE | awk '{print $2}')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Calculate New Version
        id: versioning
        env:
          VERSION_CHANGE: ${{ github.event.inputs.version-change }}
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          case "$VERSION_CHANGE" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
            *)
              echo "Invalid change type: $VERSION_CHANGE"
              exit 1
              ;;
          esac

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          sed -i "s/^version:.*/version: $NEW_VERSION/" charts/${{ matrix.chart }}/Chart.yaml

          cat charts/${{ matrix.chart }}/Chart.yaml

      - name: Package Helm Chart
        run: |
          helm package charts/${{ matrix.chart }}

      - name: Push Helm Chart to Docker Hub (OCI)
        run: |
          helm push ${{ matrix.chart }}-*.tgz oci://docker.io/devzeroinc

      - name: Upload Updated Chart.yaml as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chart-${{ matrix.chart }}
          path: charts/${{ matrix.chart }}/Chart.yaml

  create-pr:
    name: Create Pull Request for Chart Updates
    runs-on: ubuntu-latest
    needs: package-and-push
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Updated Chart.yaml Files
        uses: actions/download-artifact@v4
        with:
          path: downloaded_charts

      - name: Move Updated Chart.yaml to Correct Locations
        run: |
          for chart in dz-control-plane dz-control-plane-deps dz-data-plane dz-data-plane-deps; do
            if [ -f "downloaded_charts/chart-$chart/Chart.yaml" ]; then
              mv "downloaded_charts/chart-$chart/Chart.yaml" "charts/$chart/Chart.yaml"
            else
              echo "Error: Chart.yaml for $chart not found in artifact!"
              exit 1
            fi
          done

      - name: Get Current Branch Name
        id: get-branch
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV
          echo "Running on branch: $CURRENT_BRANCH"

      - name: Create a New Branch for PR
        run: |
          NEW_BRANCH="bump-helm-charts-$(date +%Y%m%d%H%M%S)"
          git checkout -b "$NEW_BRANCH"
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV
          echo "New branch created: $NEW_BRANCH"

      - name: Commit Updated Chart.yaml Files
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add charts/*/Chart.yaml

          echo "üîç Checking for changes before commit..."
          git status
          git diff --cached

          if git diff --cached --quiet; then
            echo "‚ùå No changes detected. Skipping commit."
            exit 0
          fi

          git commit -m "chore: bump Helm chart versions"
          git push origin "$NEW_BRANCH"

      - name: Verify Changes Before PR Creation
        run: |
          echo "üîç Verifying commit history..."
          git log -n 3 --oneline
          echo "üîç Checking diff against base branch..."
          git diff origin/${{ env.CURRENT_BRANCH }}

      - name: Create Pull Request from New Branch to Running Branch
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ env.CURRENT_BRANCH }}
          branch: ${{ env.NEW_BRANCH }}
          title: "chore: bump Helm chart versions"
          body: "This PR updates the Helm chart versions based on the selected version change type."
          labels: "helm, automated PR"
          reviewers: ${{ github.actor }}
          delete-branch: false