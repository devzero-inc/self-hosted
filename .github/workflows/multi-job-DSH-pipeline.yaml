name: Test DevZero Control Plane on AWS EKS (Dry Run)

on:
  push:
    branches:
      - garvit/pipeline-testing
  workflow_dispatch:

jobs:
  setup:
    name: Setup & AWS Authentication
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Mock AWS Credentials Setup
        run: echo "AWS Credentials Configured"

  clone-repo:
    name: Clone DevZero Repository
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Mock Repository Clone
        run: echo "Repository cloned successfully"

  terraform-provision:
    name: Provision AWS EKS Infrastructure
    runs-on: ubuntu-latest
    needs: clone-repo
    steps:
      - name: Mock Terraform Apply
        run: echo "Terraform Apply (Base Cluster) - SKIPPED"
      - name: Set Environment Variables
        run: |
          echo "CLUSTER_NAME=mock-cluster" >> $GITHUB_ENV
          echo "VPC_ID=mock-vpc-id" >> $GITHUB_ENV
          echo "PUBLIC_SUBNET_IDS=[mock-public-subnet]" >> $GITHUB_ENV
          echo "PRIVATE_SUBNET_IDS=[mock-private-subnet]" >> $GITHUB_ENV

  cluster-extensions:
    name: Deploy Cluster Extensions
    runs-on: ubuntu-latest
    needs: terraform-provision
    steps:
      - name: Mock Cluster Extensions Deployment
        run: echo "Terraform Apply (Cluster Extensions) - SKIPPED"

  configure-kube:
    name: Configure Kubernetes Access
    runs-on: ubuntu-latest
    needs: cluster-extensions
    steps:
      - name: Mock Kubernetes Configuration
        run: echo "Kubeconfig Updated - SKIPPED"

  deploy-control-plane:
    name: Deploy DevZero Control Plane
    runs-on: ubuntu-latest
    needs: configure-kube
    steps:
      - name: Mock Control Plane Deployment
        run: echo "Control Plane Installed - SKIPPED"

  deploy-data-plane:
    name: Deploy DevZero Data Plane
    runs-on: ubuntu-latest
    needs: deploy-control-plane
    steps:
      - name: Mock Data Plane Deployment
        run: echo "Data Plane Installed - SKIPPED"

  validate-deployment:
    name: Validate Deployment
    runs-on: ubuntu-latest
    needs: deploy-data-plane
    steps:
      - name: Mock Validation
        run: echo "Validation Passed - SKIPPED"

  cleanup:
    name: Cleanup Infrastructure
    runs-on: ubuntu-latest
    needs: validate-deployment
    if: always()
    steps:
      - name: Mock Terraform Destroy
        run: echo "Terraform Destroy - SKIPPED"
      - name: Mock AWS Cleanup
        run: echo "AWS Cleanup - SKIPPED"
