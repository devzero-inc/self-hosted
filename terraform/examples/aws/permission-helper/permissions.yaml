helpers:
  condition-resources: &condition-resources
    Condition:
      StringEquals:
        aws:ResourceTag/CreatedBy: DevZero

  condition-requests: &condition-requests
    Condition:
      StringEquals:
        aws:RequestTag/CreatedBy: DevZero

extra:
  debug-permissions:
    Version: "2012-10-17"
    Statement:
      - Effect: Allow
        Action:
          - sts:DecodeAuthorizationMessage
        Resource: '*'

vpc:
  creation-permissions:
    Version: "2012-10-17"
    Statement:
      # Actions required to describe resources
      - Effect: Allow
        Action:
          - ec2:DescribeAddresses
          - ec2:DescribeAddressesAttribute
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeDhcpOptions
          - ec2:DescribeInternetGateways
          - ec2:DescribeNatGateways
          - ec2:DescribeNetworkAcls
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeRouteTables
          - ec2:DescribeSecurityGroupRules
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - sts:GetCallerIdentity
        Resource: "*"

      - Effect: Allow
        Action:
          - iam:GetRole
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:role/${CLUSTER_NAME}-*


      # Actions required to create resources that can be created with the tag CreatedBy=DevZero
      - &vpc-creation-permissions
        Effect: Allow
        Action:
          - ec2:AllocateAddress
          - ec2:AssociateDhcpOptions
          - ec2:AssociateRouteTable
          - ec2:AttachInternetGateway
          - ec2:AuthorizeSecurityGroupEgress
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CreateDhcpOptions
          - ec2:CreateInternetGateway
          - ec2:CreateNatGateway
          - ec2:CreateRoute
          - ec2:CreateSubnet
          - ec2:CreateVpc
          - ec2:ModifyVpcAttribute
          - ec2:RevokeSecurityGroupEgress
          - ec2:RevokeSecurityGroupIngress
        Resource:
          - arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:*
        <<: *condition-requests


      # Replication of the above permissions but using ResourceTag. This allows changes on already created resources.
      - <<: *vpc-creation-permissions
        <<: *condition-resources

      # Actions for resources that do not allow or have a tagging system.
      - Effect: Allow
        Action:
          - ec2:CreateNetworkAclEntry
          - ec2:DeleteNetworkAclEntry
          - ec2:CreateRouteTable
          - ec2:DisassociateAddress
        Resource: "arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:*"

  deletion-permissions:
    Version: "2012-10-17"
    Statement:
      - Effect: Allow
        Action:
          - ec2:DeleteDhcpOptions
          - ec2:DeleteInternetGateway
          - ec2:DeleteNatGateway
          - ec2:DeleteNetworkAclEntry
          - ec2:DeleteRoute
          - ec2:DeleteRouteTable
          - ec2:DeleteSubnet
          - ec2:DeleteVpc
          - ec2:DetachInternetGateway
          - ec2:DisassociateAddress
          - ec2:ReleaseAddress
          - ec2:DisassociateRouteTable
        Resource: "arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:*"
        <<: *condition-resources

cluster:
  creation-permissions:
    Version: "2012-10-17"
    Statement:
      # Actions required to describe resources
      - Effect: Allow
        Action:
          - ec2:CreateTags
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeImages
          - ec2:DescribeInstances
          - ec2:DescribeLaunchTemplates
          - ec2:DescribeLaunchTemplateVersions
          - ec2:DescribeRouteTables
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:GetInstanceUefiData
          - eks:DescribeAddonVersions
          - iam:GetOpenIDConnectProvider
          - iam:GetPolicy
          - iam:GetPolicyVersion
          - iam:ListInstanceProfilesForRole
          - iam:ListOpenIDConnectProviders
          - iam:PassRole
          - kms:ListAliases
          - logs:DescribeLogGroups
          - logs:ListTagsForResource
          - sts:GetCallerIdentity
        Resource: '*'
      
      # KMS creation does not seem to allow any type of resource to be defined.
      - Effect: Allow
        Action:
          - kms:CreateKey
        Resource:
          - '*'
        <<: *condition-requests

      # KMS alias creation is deterministic (usually), so we can add specific permissions for it.
      - Effect: Allow
        Action:
          - kms:CreateAlias
        Resource:
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:alias/eks/${CLUSTER_NAME}
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:alias/${CLUSTER_NAME}

      - Effect: Allow
        Action:
          - kms:DescribeKey
          - kms:EnableKeyRotation
          - kms:GetKeyPolicy
          - kms:GetKeyRotationStatus
          - kms:ListResourceTags
          - kms:TagResource
        Resource:
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:key/*
        <<: *condition-requests

      # Security group creation doesn't seem to allow any type of resource to be defined.
      - &cluster-creation-security-group-creation
        Effect: Allow
        Action:
          - ec2:CreateSecurityGroup
        Resource:
          - '*'
        <<: *condition-requests

      # Allows editing the with proper tags
      - <<: *cluster-creation-security-group-creation
        <<: *condition-resources


      - Effect: Allow
        Action:
          - logs:CreateLogGroup
          - logs:PutRetentionPolicy
          - logs:TagResource
        Resource:
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster'
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster:log-stream:'
        <<: *condition-requests

      - Effect: Allow
        Action:
          - logs:CreateLogGroup
          - logs:PutRetentionPolicy
          - logs:TagResource
        Resource:
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster'
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster:log-stream:'
        <<: *condition-resources

      # EKS related permissions
      # Describe and List actions cannot use conditions.
      - Effect: Allow
        Action:
          - eks:DescribeAccessEntry
          - eks:DescribeAddon
          - eks:DescribeCluster
          - eks:DescribeNodegroup
          - eks:ListAssociatedAccessPolicies
        Resource:
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:access-entry/${CLUSTER_NAME}/*
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:addon/${CLUSTER_NAME}/*
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:cluster/${CLUSTER_NAME}
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:nodegroup/${CLUSTER_NAME}/*


      # These resources have no tags, we can't use conditions
      # These actions are here because terraform removes some entries when first creating the cluster.
      - Effect: Allow
        Action:
          - eks:AssociateAccessPolicy
          - eks:DeleteAccessEntry
          - eks:DisassociateAccessPolicy
        Resource:
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:access-entry/${CLUSTER_NAME}/*

      - Effect: Allow
        Action:
          - eks:CreateAccessEntry
          - eks:CreateAddon
          - eks:CreateCluster
          - eks:CreateNodegroup
          - eks:TagResource
        Resource:
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:access-entry/${CLUSTER_NAME}/*
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:addon/${CLUSTER_NAME}/*
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:cluster/${CLUSTER_NAME}
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:nodegroup/${CLUSTER_NAME}/*
        <<: *condition-requests

      # RunInstances is required for creating node groups
      - Effect: Allow
        Action:
          - ec2:RunInstances
        Resource:
          - '*'

      - Effect: Allow
        Action:
          - ec2:RevokeSecurityGroupEgress
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:AuthorizeSecurityGroupEgress
        Resource: arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:*
        <<: *condition-requests

      - Effect: Allow
        Action:
          - ec2:CreateLaunchTemplate
        Resource: arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:launch-template/*
        <<: *condition-requests

      - Effect: Allow
        Action:
          - iam:CreateOpenIDConnectProvider
          - iam:GetOpenIDConnectProvider
          - iam:TagOpenIDConnectProvider
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:oidc-provider/*
        <<: *condition-resources


      # This action does not allow conditions
      - Effect: Allow
        Action:
          - iam:AttachRolePolicy
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:role/${CLUSTER_NAME}-*

      - Effect: Allow
        Action:
          - iam:CreatePolicy
          - iam:CreateRole
          - iam:GetRole
          - iam:PassRole
          - iam:TagPolicy
          - iam:TagRole
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:role/${CLUSTER_NAME}-*
          - arn:aws:iam::${ACCOUNT_ID}:policy/${CLUSTER_NAME}-*
        <<: *condition-requests


      - Effect: Allow
        Action:
          - iam:ListAttachedRolePolicies
          - iam:ListPolicyVersions
          - iam:ListRolePolicies
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:role/${CLUSTER_NAME}-*
          - arn:aws:iam::${ACCOUNT_ID}:policy/${CLUSTER_NAME}-*

  deletion-permissions:
    Version: "2012-10-17"
    Statement:
      - Effect: Allow
        Action:
          - iam:DeleteOpenIDConnectProvider
        Resource: arn:aws:iam::${ACCOUNT_ID}:oidc-provider/*
        <<: *condition-resources

      - Effect: Allow
        Action:
          - eks:DeleteAddon
          - eks:DeleteCluster
          - eks:DeleteNodegroup
        Resource:
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:addon/${CLUSTER_NAME}/*
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:cluster/${CLUSTER_NAME}
          - arn:aws:eks:${AWS_REGION}:${ACCOUNT_ID}:nodegroup/${CLUSTER_NAME}/*
        <<: *condition-resources

      - Effect: Allow
        Action:
          - iam:DetachRolePolicy
          - iam:DeleteRole
          - iam:DeletePolicy
        Resource:
          - arn:aws:iam::${ACCOUNT_ID}:role/${CLUSTER_NAME}-*
          - arn:aws:iam::${ACCOUNT_ID}:policy/${CLUSTER_NAME}-*
        <<: *condition-resources

      - Effect: Allow
        Action:
          - ec2:RevokeSecurityGroupIngress
          - ec2:DeleteSecurityGroup
          - ec2:RevokeSecurityGroupEgress
        Resource: arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:security-group/*
        <<: *condition-resources


      - Effect: Allow
        Action:
          - kms:ScheduleKeyDeletion
        Resource:
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:key/*
        <<: *condition-resources

      # KMS Aliases have no tags, so we can't use the condition-resources.
      - Effect: Allow
        Action:
          - kms:DeleteAlias
        Resource:
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:alias/eks/${CLUSTER_NAME}
          - arn:aws:kms:${AWS_REGION}:${ACCOUNT_ID}:alias/${CLUSTER_NAME}

      - Effect: Allow
        Action:
          - ec2:DeleteLaunchTemplate
        Resource: arn:aws:ec2:${AWS_REGION}:${ACCOUNT_ID}:launch-template/*
        <<: *condition-resources

      - Effect: Allow
        Action:
          - logs:DeleteLogGroup
        Resource:
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster'
          - 'arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:/aws/eks/${CLUSTER_NAME}/cluster:log-stream:'
        <<: *condition-resources

efs:
  creation-permissions:
    Version: "2012-10-17"
    Statement:
      # Describe and list can't have condition requests
      - Effect: Allow
        Action:
          - elasticfilesystem:DescribeFileSystems
          - elasticfilesystem:DescribeLifecycleConfiguration
          - elasticfilesystem:DescribeFileSystemPolicy
          - elasticfilesystem:DescribeMountTargets
          - elasticfilesystem:DescribeMountTargetSecurityGroups
        Resource: arn:aws:elasticfilesystem:${AWS_REGION}:${ACCOUNT_ID}:file-system/*

      - &vpc-creation-permissions
        Effect: Allow
        Action:
          - elasticfilesystem:CreateFileSystem
          - elasticfilesystem:PutFileSystemPolicy
          - elasticfilesystem:TagResource
          - elasticfilesystem:PutLifecycleConfiguration
          - elasticfilesystem:CreateMountTarget
        Resource: arn:aws:elasticfilesystem:${AWS_REGION}:${ACCOUNT_ID}:file-system/*
        <<: *condition-requests

      # Allow both requests and resources
      - <<: *vpc-creation-permissions
        <<: *condition-resources

  deletion-permissions:
    Version: "2012-10-17"
    Statement:
      - Effect: Allow
        Action:
          - elasticfilesystem:DescribeMountTargets
          - elasticfilesystem:DescribeMountTargetSecurityGroups
        Resource: arn:aws:elasticfilesystem:${AWS_REGION}:${ACCOUNT_ID}:file-system/*
      - Effect: Allow
        Action:
          - elasticfilesystem:DeleteFileSystem
          - elasticfilesystem:DeleteMountTarget
          - elasticfilesystem:DeleteFileSystemPolicy
        Resource: arn:aws:elasticfilesystem:${AWS_REGION}:${ACCOUNT_ID}:file-system/*
        <<: *condition-resources


